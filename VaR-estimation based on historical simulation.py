# -*- coding: utf-8 -*-
"""量化分析-历史模拟法计算VaR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZBEvchOtBMMUZLUa8ckDMuU-akL4Yb6e
"""

###import
import numpy as np
import pandas as pd
import datetime as dt
import matplotlib.pylab as plt
from scipy.stats import norm
import math
import seaborn as sns
import time

#pip install yfinance
import yfinance as yf

#Test the yfinance package
ticker_symbol = "AAPL"

# Create a Ticker object
ticker = yf.Ticker(ticker_symbol)

# Fetch historical market data
time.sleep(2)
historical_data = ticker.history(period="3mo")  # data for the last year
print("Historical Data:")
print(historical_data)

#设置时间范围
years=2
endDate=dt.datetime.today()
startDate=endDate-dt.timedelta(days=365*years)

print(startDate)
print(endDate)

#创建证券的代码ticker,以便从yfinance提取数据
#纳指指数和标普500ETF
tickers=['^IXIC','SPY']

closeprice_df=pd.DataFrame()

for ticker in tickers:
    data=yf.download(ticker,startDate,endDate)
    closeprice_df[ticker]=data['Close']

closeprice_df

#通过np.log,和df.shift计算资产的log return
logreturn=np.log(closeprice_df/closeprice_df.shift(1))
logreturn

closeprice_df.to_csv('closeprice.csv') #通过将closeprice_df转变为csv,在excel中进行操作，验证log return 的计算
logreturn.to_csv('logreturn.csv')

closeprice_df=closeprice_df.dropna() #将N/A的数据去掉
logreturn=logreturn.dropna()

logreturn

#创建组合（设置组合权重）
#设置组合初始金额
portfolio_principal=1000000 #一百万
#设置各个证券的权重
weights={
    '^IXIC':0.60,
    'SPY':0.40
}

#将证券的权重和log return相乘
logreturn_portfolio=logreturn.mul(pd.Series(weights),axis=1)
logreturn_portfolio

logreturn_portfolio['WACC']=logreturn_portfolio['SPY']+logreturn_portfolio['^IXIC'] #weighted average cost of capital

logreturn_portfolio

#设置10天数，并滚动计算10天的收益率
days=10
logreturn_portfolio10d=logreturn_portfolio.rolling(window=days).sum()
logreturn_portfolio10d

logreturn_portfolio10d.head(20)

logreturn_portfolio10d=logreturn_portfolio10d.dropna()

logreturn_portfolio10d

#设置confidence interval, 并计算VaR (value at risk)
confidence_level=0.95
VaR=portfolio_principal * (math.exp(np.percentile(logreturn_portfolio10d['WACC'],100-confidence_level*100))-1)

print(VaR) #这个portfolio的最大损失金额,指特定时间长度内在一定信赖程度上的最大可能损失情形

#100万美元的投资组合在10天的时间范围内有5%的可能性expected损失超过53386美元，也就是说有95%的可能性组合损失不会超过这个数

print(VaR/portfolio_principal)

#数据可视化
#把每日滚动前10天的收益计算出来，形成array
Portfolio_interest=portfolio_principal*(np.exp(logreturn_portfolio10d['WACC'].values)-1)#每天的损失金额

Portfolio_interest

#进行作图
sns.histplot(Portfolio_interest,kde=True,color='blue')
plt.xlabel(f'{days}-day portfolio interest')
plt.ylabel('Frequency')
plt.title(f'{days} day distribution of portfolio returns')
plt.axvline(x=VaR,color='red',linestyle='dashed',linewidth=2,label=f'VaR at{confidence_level*100}%')
plt.legend
plt.show() #这个图像的红线往右的区域就是P（x>VaR）=95%，VaR是个负值